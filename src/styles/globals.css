:root {
  --primary: #3a56d4;
  --primary-light: #5b76f5;
  --primary-dark: #2a46c4;
  --secondary: #ff7d3b;
  --secondary-light: #ff9a66;
  --accent: #40e0d0;
  --success: #06d6a0;
  --background: #f8f9fa;
  --card-bg: #ffffff;
  --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  --text: #2b2d42;
  --text-light: #6c757d;
  --border: #e0e0e0;
  --border-radius: 12px;
  --input-radius: 10px;
  --transition: all 0.3s ease;
  --input-shadow: 0 2px 5px rgba(0, 0, 0, 0.06);
  --focus-shadow: rgba(58, 86, 212, 0.25);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', 'Segoe UI', -apple-system, BlinkMacSystemFont, sans-serif;
  background-color: #f5f5f5;
  color: var(--text);
  line-height: 1.6;
}

.simulator-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('../images/background_image.webp');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  padding: 2rem 1rem;
}

.simulator-card {
  background: var(--card-bg);
  border-radius: var(--border-radius);
  border: none;
  padding: 2.5rem;
  width: 100%;
  max-width: 850px;
  box-shadow: var(--card-shadow);
  position: relative;
  z-index: 1;
  animation: slideUp 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}

h1 {
  color: var(--primary);
  margin-bottom: 1.5rem;
  font-size: 2.25rem;
  font-weight: 700;
  letter-spacing: -0.5px;
}

.handwritten-title {
  font-family: 'Poppins', sans-serif;
  text-align: center;
  margin-bottom: 2rem;
  font-size: 2.5rem;
  font-weight: 700;
  background: linear-gradient(45deg, var(--primary), var(--secondary));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  position: relative;
}

.handwritten-title::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 4px;
  background: linear-gradient(45deg, var(--primary), var(--secondary));
  border-radius: 2px;
}

form {
  display: flex;
  flex-direction: column;
  gap: 1.25rem; /* Reduced from 2rem */
}

.form-row {
  display: flex;
  gap: 1.25rem; /* Reduced from 2rem */
}

.form-group {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative;
}

label {
  font-weight: 600;
  margin-bottom: 0.75rem;
  color: var(--text);
  font-size: 0.9rem;
  letter-spacing: 0.02em;
}

.simple-input {
  border: 1px solid var(--border);
  border-radius: var(--input-radius);
  padding: 0.95rem 1rem;
  font-size: 1rem;
  background-color: var(--card-bg);
  box-shadow: var(--input-shadow);
  transition: var(--transition);
}

.simple-input:hover {
  border-color: var(--primary-light);
}

.simple-input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px var(--focus-shadow);
}

/* Radio button styling - slimmer version */
.radio-group {
  display: flex;
  gap: 1.25rem;
}

.radio-container {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  position: relative;
  padding: 0.5rem 1rem; /* Reduced padding to make buttons less fat */
  background-color: #f9f9f9;
  border-radius: 25px;
  transition: all 0.2s ease;
  border: 1px solid var(--border);
}

.radio-container:hover {
  background-color: #f0f0f0;
}

input[type="radio"] {
  position: absolute;
  opacity: 0;
}

input[type="radio"]:checked + .radio-label {
  color: var(--primary);
  font-weight: 600;
}

/* Border styling when selected, made more subtle */
input[type="radio"]:checked ~ .checkmark,
.radio-container:has(input[type="radio"]:checked) {
  border: 2px solid var(--primary);
  background-color: rgba(58, 86, 212, 0.05);
  box-shadow: 0 0 0 1px var(--primary-light);
}

.radio-label {
  font-weight: 500;
  font-size: 0.95rem; /* Slightly smaller text */
  transition: all 0.2s ease;
}

/* Remove the underline styling and replace with border highlight */
.radio-container input[type="radio"]:checked ~ .radio-label::before {
  display: none;
}

/* Add this new rule for the border highlight */
.radio-container input[type="radio"]:checked ~ .radio-container,
input[type="radio"]:checked + .radio-label {
  color: var(--primary);
  font-weight: 600;
}

/* Add border styling to the parent container when selected */
input[type="radio"]:checked ~ .checkmark,
.radio-container:has(input[type="radio"]:checked) {
  border: 2px solid var(--primary);
  background-color: rgba(58, 86, 212, 0.05);
  box-shadow: 0 0 0 1px var(--primary-light);
}

.radio-label {
  font-weight: 500;
  transition: all 0.2s ease;
}

/* Simulate button */
.simulate-button {
  background: linear-gradient(45deg, var(--primary), var(--primary-light));
  color: white;
  border: none;
  border-radius: 30px;
  padding: 1.1rem;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  margin-top: 1.5rem;
  transition: transform 0.2s, box-shadow 0.2s;
  box-shadow: 0 4px 15px rgba(58, 86, 212, 0.3);
  letter-spacing: 0.02em;
}

.simulate-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(58, 86, 212, 0.4);
}

.simulate-button:active {
  transform: translateY(0);
}

/* Results section */
.result-section {
  margin-top: 2.5rem;
  border-top: 1px solid var(--border);
  padding-top: 2rem;
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.result-section h2 {
  margin-bottom: 1.5rem;
  font-size: 1.35rem;
  font-weight: 700;
  color: var(--primary);
  position: relative;
  display: inline-block;
}

.result-section h2::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 40px;
  height: 3px;
  background-color: var(--secondary);
  border-radius: 2px;
}

.result-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.25rem;
}

.result-item {
  padding: 1.25rem;
  border-radius: var(--border-radius);
  background-color: #f9f9f9;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: transform 0.2s;
}

.result-item:hover {
  transform: translateY(-3px);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}

.result-item span:first-child {
  font-weight: 600;
  display: block;
  margin-bottom: 0.5rem;
  color: var(--text-light);
  font-size: 0.85rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.result-item span:last-child {
  font-weight: 700;
  font-size: 1.2rem;
  color: var(--primary);
}

select.simple-input {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image: url("data:image/svg+xml;utf8,<svg fill='%233a56d4' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/></svg>");
  background-repeat: no-repeat;
  background-position: right 12px center;
  padding-right: 40px;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .form-row {
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .result-grid {
    grid-template-columns: 1fr 1fr;
  }
  
  .simulator-card {
    padding: 1.75rem;
  }
  
  .handwritten-title {
    font-size: 2rem;
  }
}

@media (max-width: 480px) {
  .result-grid {
    grid-template-columns: 1fr;
  }
  
  .form-row {
    gap: 1.25rem;
  }
}

/* Add floating labels */
.form-group {
  position: relative;
}

/* Add custom checkbox styling */
input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

.checkbox-container {
  display: flex;
  align-items: center;
  gap: 10px;
  cursor: pointer;
  position: relative;
  padding: 4px 0;
}

.checkbox-container .checkmark {
  position: relative;
  min-width: 20px;
  height: 20px;
  background: white;
  border: 1px solid var(--border);
  border-radius: 4px;
  margin-right: 10px;
  display: inline-block;
  transition: all 0.2s;
}

.checkbox-container input:checked ~ .checkmark {
  background: var(--primary);
  border-color: var(--primary);
}

.checkbox-container .checkmark:after {
  content: '';
  position: absolute;
  left: 6px;
  top: 2px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  display: none;
}

.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

.checkbox-label {
  font-size: 0.9rem;
}

/* Add this after the .checkbox-label rule and before the .result-section .simulate-button rule */

.form-section {
  animation: fadeIn 0.5s ease-out;
}

/* New rule for full-width simulate button in results section */
.result-section .simulate-button {
  width: 100%;
  display: block;
  margin-top: 1.5rem;
}

.disabled-input {
  background-color: #f2f2f2;
  color: #888;
  cursor: not-allowed;
  border: 1px solid #ddd;
  opacity: 0.7;
}